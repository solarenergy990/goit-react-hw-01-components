{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/utils/get-random.js","components/Statistics/Statistics.js","components/Friend/Friend.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","description","src","alt","statsItem","label","quantity","getRandom","Math","ceil","random","getRandomColor","Statistics","title","statistics","trim","toUpperCase","statList","map","stat","id","percentage","item","style","backgroundColor","randomColor","Friend","isOnline","container","online","offline","width","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.107a65bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3ELHe\",\"avatar\":\"Profile_avatar__2gjME\",\"description\":\"Profile_description__361Hd\",\"name\":\"Profile_name__3c0Ou\",\"stats\":\"Profile_stats__2lDmj\",\"statsItem\":\"Profile_statsItem__1JUrh\",\"label\":\"Profile_label__2SNVb\",\"quantity\":\"Profile_quantity__1wssR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2t3Nx\",\"item\":\"FriendList_item__3kaTL\",\"status\":\"FriendList_status__2uTpa\",\"online\":\"FriendList_online__2nXkk FriendList_status__2uTpa\",\"offline\":\"FriendList_offline__18n6Z FriendList_status__2uTpa\",\"avatar\":\"FriendList_avatar__xswEr\",\"name\":\"FriendList_name__3tIOZ\",\"container\":\"FriendList_container__2SDVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__jG96p\",\"title\":\"Statistics_title__2GrVv\",\"statList\":\"Statistics_statList__Zm3Qq\",\"item\":\"Statistics_item__1Z_Uz\",\"label\":\"Statistics_label__pmUxH\",\"percentage\":\"Statistics_percentage__27rLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2rmmM\"};","import s from \"./Profile.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statsItem}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","const getRandom = () => {\n  const min = 0;\n  const max = 255;\n\n  const randomColor = Math.ceil(Math.random() * (max - min) + min);\n\n  return randomColor;\n};\n\nconst getRandomColor = () => {\n  return `rgb(${getRandom()},${getRandom()},${getRandom()})`;\n};\n\nexport default getRandomColor;\n","import s from \"./Statistics.module.css\";\nimport PropTypes from \"prop-types\";\nimport randomColor from \"./utils/get-random\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title.trim() && <h2 className={s.title}>{title.toUpperCase()}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map((stat) => {\n          const { id, label, percentage } = stat;\n\n          return (\n            <li\n              className={s.item}\n              key={id}\n              style={{\n                backgroundColor: randomColor(),\n              }}\n            >\n              <span className={s.label}>{label}</span>\n              <span className={s.percentage}>{percentage}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n","import s from \"../FriendList/FriendList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Friend = ({ avatar, name, isOnline }) => {\n  return (\n    <div className={s.container}>\n      <span className={isOnline ? s.online : s.offline}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </div>\n  );\n};\n\nFriend.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default Friend;\n","import Friend from \"../Friend/Friend\";\nimport s from \"./FriendList.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map((friend) => {\n        const { avatar, name, isOnline, id } = friend;\n\n        return (\n          <li className={s.item} key={id}>\n            <Friend avatar={avatar} name={name} isOnline={isOnline} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import s from \"./TransactionHistory.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((item) => {\n          const { id, type, amount, currency } = item;\n\n          return (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Profile from \"./components/Profile/Profile\";\nimport user from \"./components/Profile/user.json\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport statisticalData from \"./components/Statistics/statistical-data.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friends from \"./components/FriendList/friends.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}